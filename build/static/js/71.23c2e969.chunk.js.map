{"version":3,"file":"static/js/71.23c2e969.chunk.js","mappings":"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","sources":["common/NewWallCards.js","features/manageCompanies/ManageCompanies.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\nimport background from \"images/background.png\";\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport trustedBy2 from \"images/Rectangle 7.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Input,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction NewWallCards(props) {\r\n  const [age, setAge] = React.useState(\"\");\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n    console.log(event);\r\n  };\r\n  const history = useNavigate();\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      console.log(values);\r\n      // localStorage.setItem('location', values.location)\r\n      redirect();\r\n\r\n      try {\r\n        const data = await loginMuation({ data: values }).unwrap();\r\n        // TODO extra login\r\n        // redirect()\r\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      } catch (error) {\r\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  // if (authUser.accessToken) {\r\n  //   return <Navigate to={RouteEnum.HOME} />;\r\n  // }\r\n\r\n  return (\r\n    <div\r\n      className={\"p-20\"}\r\n      style={{\r\n        border: \"none\",\r\n        borderLeft: props.cutborder ? \"1px solid #C4C4C4\" : \"none\",\r\n      }}\r\n    >\r\n      <div\r\n        className={\r\n          props.rider\r\n            ? \"riders-bg text-white text-center mr-3\"\r\n            : props.plain\r\n            ? \"plain-bg\"\r\n            : props.green\r\n            ? \"bg-primary-main text-white\"\r\n            : props.big\r\n            ? \"text-left\"\r\n            : \" text-white text-center\"\r\n        }\r\n        sx={{\r\n          minWidth: props.big ? 220 : 155,\r\n          minHeight: props.big ? 160 : 120,\r\n        }}\r\n      >\r\n        <div className={props.bigspace ? \" pr-10\" : \"px-5\"}>\r\n          <div>\r\n            <Typography\r\n              className={\r\n                props.plain || props.green\r\n                  ? \" text-center text-white\"\r\n                  : props.dashboard\r\n                  ? \"text-center text-primary-main \"\r\n                  : \"text-center text-primary-main font-bold\"\r\n              }\r\n              sx={{ fontSize: 12 }}\r\n            >\r\n              {props.name || \"Total Companies\"}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography\r\n              variant={props.small ? \"h4\" : \"h2\"}\r\n              className={\r\n                props.green\r\n                  ? \"text-white text-center font-bold\"\r\n                  : \"text-center font-bold text-primary-main\"\r\n              }\r\n            >\r\n              {(props.name == 'Earnings'? `₦ ${props.count}` : props.count) || '0'}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <Button size=\"small\">Learn More</Button> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewWallCards;\r\n","import React, { useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport pdf from \"images/pdf.png\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\nimport { post, get, put } from \"services/fetch\";\r\n\r\n// import ManageCompanyCard from 'common/ManageCompanyCard'\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport gigLogo from \"images/Ellipse 56.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Autocomplete,\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Input,\r\n  MenuItem,\r\n  Modal,\r\n  Rating,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WallCards from \"common/WallCards\";\r\nimport ManageCompanyCard from \"./ManageCompanyCard\";\r\nimport { RiArrowLeftSLine } from \"react-icons/ri\";\r\nimport ManageCompaniesTable from \"./ManageCompaniesTable\";\r\nimport NewWallCards from \"common/NewWallCards\";\r\nimport ToDoorSearch from \"common/ToDoorSearch\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nfunction ManageCompanies(props) {\r\n\r\n  const getCompanyStatisticsQueryResult = UserApi.useGetCompanyStatisticsQuery(\r\n    {}\r\n  );\r\n  const companyStatistics = getCompanyStatisticsQueryResult?.data;\r\n  // const dispatch = useDispatch\r\n  const [show, setShow] = useState(false);\r\n  const [companyRiders, setCompanyRiders] = useState([]);\r\n  const [tempCompanyRiders, setTempCompanyRiders] = useState([]);\r\n  const [companyEarns, setCompanyEarns] = useState([]);\r\n  const [companyNames, setCompanyName] = useState(\"\");\r\n  const [companyImage, setCompanyImage] = useState(\"\");\r\n  const [user, setUser] = useState();\r\n  const [count, setcount] = useState(0);\r\n  const [opens, setOpens] = React.useState(false);\r\n\r\n  const handleShow = (verified) => {\r\n    if (verified) {\r\n      setShow(!show);\r\n    } else {\r\n      setOpens(true);\r\n    }\r\n    // console.log(\"jo(truehn\");\r\n  };\r\n  const history = useNavigate();\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"50%\",\r\n    minHeight: \"520px\",\r\n    bgcolor: \"background.paper\",\r\n    borderRadius: \"3%\",\r\n    // border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  //   const ridersUnderCompany = async (userId) => {\r\n  //     const res = await get({\r\n  //       endpoint: `api/super-admin/company/getalluser?userType=company\r\n  // `,\r\n  //       //  body: { ...payload },\r\n  //       auth: true,\r\n  //     });\r\n  //     console.log(userId);\r\n  //   };\r\n\r\n  const top100Films = [\r\n    { label: \"Edo State\", year: 1994 },\r\n    { label: \"Oredo\", year: 1972 },\r\n  ];\r\n\r\n  const tabloid = tempCompanyRiders?.map((e) => ({\r\n    image: e?.profileUrl,\r\n    name: e?.fname,\r\n    company: e?.companyName,\r\n    id: e?.email,\r\n    ratings: moment(e.created_at).format(\"ll\"),\r\n    tripsCompleted: \"-\",\r\n    phoneNo: e?.phoneNo,\r\n    status: e?.currTripState,\r\n  }));\r\n\r\n  const tableArray = [\r\n    {\r\n      image: gigLogo,\r\n      name: \"Nickky Samuel jonas  \",\r\n      company: \"GIG Logistics\",\r\n      Id: \"2234456\",\r\n      ratings: \"4\",\r\n    },\r\n\r\n    {\r\n      image: gigLogo,\r\n      name: \"John jimmy Samuel  \",\r\n      company: \"GIG Logistics\",\r\n      Id: \"2234456\",\r\n      ratings: \"4\",\r\n    },\r\n  ];\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      console.log(values);\r\n      // localStorage.setItem('location', values.location)\r\n      redirect();\r\n\r\n      try {\r\n        const data = await loginMuation({ data: values }).unwrap();\r\n        // TODO extra login\r\n        // redirect()\r\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      } catch (error) {\r\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  // if (authUser.accessToken) {\r\n  //   return <Navigate to={RouteEnum.HOME} />;\r\n  // }\r\n  const getAllCompanyQueryResult = UserApi.useGetAllQuery({\r\n    userType: \"company\",\r\n    count: count,\r\n  });\r\n  const totalCompanies = getAllCompanyQueryResult?.data?.data;\r\n  console.log(totalCompanies);\r\n\r\n  const functionHook = () => {\r\n    //  dispatch(UserApi.useLoginMutation());\r\n  };\r\n\r\n  const ridersUnderCompany = async (companyId) => {\r\n    const res = await get({\r\n      endpoint: `api/super-admin/getAllRidersCompany?userId=${companyId}`,\r\n      //  body: { ...payload },\r\n      auth: true,\r\n    });\r\n    console.log(res.data.data);\r\n    setCompanyRiders(res.data.data);\r\n    setTempCompanyRiders(res.data.data);\r\n  };\r\n\r\n  const ridersUnderCompanyR = async (companyId) => {\r\n    const res = await get({\r\n      endpoint: `api/super-admin/getAllRidersCompany?userId=${companyId}`,\r\n      //  body: { ...payload },\r\n      auth: true,\r\n    });\r\n    console.log(res?.data?.data);\r\n    return res?.data?.data?.length;\r\n  };\r\n  function numberWithCommas(x) {\r\n    // serPrice.value = x?.toString()?.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    //  formState.target_amount=cleanupNumber(serPrice.value)\r\n    return x?.toString()?.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n  const companyEarnings = async (companyId) => {\r\n    const res = await get({\r\n      endpoint: `api/super-admin/companyTotalEarningStats?userId=${companyId}`,\r\n      //  body: { ...payload },\r\n      auth: true,\r\n    });\r\n    setCompanyEarns(res?.data?.data[0]?.total_revenue || 0);\r\n    // setCompanyEarns(res.data.data);\r\n  };\r\n\r\n  const filterRidersTable = (val) => {\r\n    // console.log(\"Samson\"?.includes(val));\r\n    // console.log(companyRiders);\r\n    console.log(val);\r\n    let temp = companyRiders?.filter((e) =>\r\n      e?.fname.toLowerCase()?.includes(val?.toLowerCase())\r\n    );\r\n    setTempCompanyRiders(temp);\r\n  };\r\n\r\n  const approveDecline = async (status, companyId) => {\r\n    const res = status\r\n      ? await put({\r\n          endpoint: `api/super-admin/approveUser?id=${companyId}`,\r\n          //  body: { ...payload },\r\n          auth: true,\r\n        })\r\n      : await put({\r\n          endpoint: `api/super-admin/rejectUser?id=${companyId}`,\r\n          //  body: { ...payload },\r\n          auth: true,\r\n        });\r\n\r\n    if (res.data.success) {\r\n      setcount(count + 1);\r\n      enqueueSnackbar(res?.data?.message, { variant: \"succes\" });\r\n\r\n    } else {\r\n      console.log(res)\r\n      enqueueSnackbar(res?.data?.message, { variant: \"error\" });\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <ToDoorSearch />\r\n\r\n      {!show && (\r\n        <div className=\"\">\r\n          <div class=\"w-2/5 mb-8\">\r\n            <div className=\"flex items-center  mt-8 border2 p-2\">\r\n              <NewWallCards\r\n                dashboard={true}\r\n                small={true}\r\n                bigspace={true}\r\n                name=\"Verified Companies\"\r\n                count={companyStatistics?.total_company}\r\n              />\r\n              <NewWallCards\r\n                dashboard={true}\r\n                small={true}\r\n                cutborder={true}\r\n                name=\"Unverified Companies\"\r\n                count={numberWithCommas(companyStatistics?.unverified_company)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"flex flex-wrap gap-4\">\r\n            {totalCompanies?.map((e) => (\r\n              <div\r\n                onClick={() => {\r\n                  ridersUnderCompany(e?._id);\r\n                  companyEarnings(e?._id);\r\n                  setCompanyName(e?.fname);\r\n                  setCompanyImage(e?.profileUrl);\r\n                  setUser(e);\r\n                }}\r\n                className=\"w-[32%] mt-3\"\r\n              >\r\n                <ManageCompanyCard companyDetails={e} handleShow={handleShow} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {show && (\r\n        <div>\r\n          <div\r\n            onClick={handleShow}\r\n            className=\"flex items-center mb-8 cursor-pointer w-16 p-2\"\r\n          >\r\n            <div\r\n              style={{ border: \"1px solid #494949\" }}\r\n              className=\"border-solid w-5 mr-2 rounded h-5 flex justify-center items-center\"\r\n            >\r\n              <RiArrowLeftSLine\r\n                className=\"\"\r\n                style={{ fontSize: \"22px\", color: \"#494949\" }}\r\n              />\r\n            </div>\r\n            <p style={{ color: \"#494949\" }} className=\"text-base\">\r\n              Back\r\n            </p>\r\n          </div>\r\n\r\n          <div\r\n            className=\"flex items-center\"\r\n            style={{ backGroundColor: \"#1E1E1E\" }}\r\n          >\r\n            <Avatar src={companyImage} className=\"rounded-full\" />\r\n            <Typography variant=\"h5\" className=\"font-bold ml-4 \">\r\n              {companyNames}\r\n            </Typography>\r\n          </div>\r\n          <div className=\"flex \">\r\n            <div className=\"flex items-center  mt-8 border2 p-2\">\r\n              <NewWallCards\r\n                dashboard={true}\r\n                small={true}\r\n                bigspace={true}\r\n                name=\"Riders\"\r\n                count={companyRiders?.length}\r\n              />\r\n\r\n              <NewWallCards\r\n                dashboard={true}\r\n                small={true}\r\n                cutborder={true}\r\n                name=\"Earnings\"\r\n                count={numberWithCommas(companyEarns)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex  justify-between  items-end\">\r\n            <Typography\r\n              variant=\"h5\"\r\n              className=\"font-bold mt-8 text-primary-main\"\r\n              // text-blue-800\r\n            >\r\n              Riders\r\n            </Typography>\r\n\r\n            <div className=\"flex justify-between items-end\">\r\n              <TextField\r\n                onChange={(e, value) => filterRidersTable(e.target.value)}\r\n              />\r\n              {/* <Autocomplete\r\n                className=\"mr-3\"\r\n                id=\"combo-box-demo\"\r\n                options={top100Films}\r\n                sx={{ width: 200 }}\r\n                renderInput={(params) => <TextField {...params} />}\r\n              />\r\n              <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                options={top100Films}\r\n                sx={{ width: 200 }}\r\n                renderInput={(params) => <TextField {...params} />}\r\n              /> */}\r\n            </div>\r\n          </div>\r\n\r\n          {tabloid?.map((e) => (\r\n            <ManageCompaniesTable tableArray={e} />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <Modal\r\n        // open={true}\r\n        open={opens}\r\n        onClose={() => setOpens(false)}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <div>\r\n          <Box sx={style}>\r\n            <div>\r\n              <div className=\"flex gap-8\">\r\n                <div className=\"flex\">\r\n                  <Avatar\r\n                    sx={{ width: 100, height: 100 }}\r\n                    src={user?.profileUrl}\r\n                  />\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                  <Typography className=\"font-bold mb-5\" variant=\"h5\">\r\n                    {user?.fname}\r\n                  </Typography>\r\n                  <div class=\"flex gap-5\">\r\n                    <Button\r\n                      onClick={() => approveDecline(true, user?._id)}\r\n                      className=\"bg-green-500\"\r\n                    >\r\n                      Approve\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => approveDecline(false, user?._id)}\r\n                      className=\"bg-red-500\"\r\n                    >\r\n                      Decline\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <Divider className=\"my-8\" />\r\n              <div class=\"flex gap-20\">\r\n                <div className=\" gap-16 font-semibold\">\r\n                  <Typography className=\"my-3 font-semibold\">\r\n                    Total Earnings\r\n                  </Typography>\r\n                  <Typography className=\"font-semibold text-primary-main\">\r\n                    {\" \"}\r\n                    XXXXXXX\r\n                  </Typography>\r\n                </div>\r\n                <div className=\" font-semibold\">\r\n                  <Typography className=\"my-3 font-semibold\">\r\n                    No Of Rides\r\n                  </Typography>\r\n                  <Typography className=\"font-semibold text-primary-main\">\r\n                    XXXXX\r\n                  </Typography>\r\n                </div>\r\n              </div>\r\n              <Divider className=\"my-8\" />\r\n              <div class=\"flex gap-16 \">\r\n                <div className=\"flex flex-col gap-3 font-semibold\">\r\n                  <Typography className=\"font-semibold\">Address:</Typography>\r\n                  <Typography className=\"font-semibold\">\r\n                    Phone Number:\r\n                  </Typography>\r\n                  <Typography className=\"font-semibold\">\r\n                    Email address:\r\n                  </Typography>\r\n                  <Typography className=\"font-semibold\">ID Card:</Typography>\r\n                  <Typography className=\"font-semibold\">\r\n                    Last Login Image\r\n                  </Typography>\r\n                </div>\r\n                <div className=\"flex flex-col gap-3\">\r\n                  <Typography>{user?.city}</Typography>\r\n                  <Typography>{user?.phoneNo}</Typography>\r\n                  <Typography>{user?.email}</Typography>\r\n                  <Typography>{\"****\"}</Typography>\r\n                  <Typography>{\"***\"}</Typography>\r\n                </div>\r\n              </div>\r\n              <div class=\"flex gap-6 mt-4\">\r\n                <div>\r\n                  <Typography className=\"font-semibold\">ID:</Typography>\r\n                  {user?.idPhotoUrl?.endsWith(\".pdf\") ? (\r\n                    <a href={user?.idPhotoUrl} target=\"_blank\">\r\n                      <img className=\"w-full h-32  border-blue-300\" src={pdf} />\r\n                    </a>\r\n                  ) : (\r\n                    <img\r\n                      className=\"w-[300px] h-32  border-blue-300\"\r\n                      src={user?.idPhotoUrl}\r\n                    />\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <Typography className=\"font-semibold\">\r\n                    CAC Document:\r\n                  </Typography>\r\n                  {user?.companyRegistrationPhotoUrl?.endsWith(\".pdf\") ? (\r\n                    <a href={user?.companyRegistrationPhotoUrl} target=\"_blank\">\r\n                      <img className=\"w-full h-32 border-blue-300\" src={pdf} />\r\n                    </a>\r\n                  ) : (\r\n                    <img\r\n                      className=\"w-[300px] h-32  border-blue-300\"\r\n                      src={user?.companyRegistrationPhotoUrl}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Box>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManageCompanies;\r\n"],"names":["props","React","history","useNavigate","enqueueSnackbar","useAuthUser","useSnackbar","UserApi","loginMuation","useFormik","initialValues","username","password","validationSchema","yup","trim","required","onSubmit","values","console","log","data","unwrap","variant","message","className","style","border","borderLeft","cutborder","rider","plain","green","big","sx","minWidth","minHeight","bigspace","dashboard","fontSize","name","small","count","getCompanyStatisticsQueryResult","companyStatistics","useState","show","setShow","companyRiders","setCompanyRiders","tempCompanyRiders","setTempCompanyRiders","companyEarns","setCompanyEarns","companyNames","setCompanyName","companyImage","setCompanyImage","user","setUser","setcount","opens","setOpens","handleShow","verified","tabloid","map","e","image","profileUrl","fname","company","companyName","id","email","ratings","moment","created_at","format","tripsCompleted","phoneNo","status","currTripState","getAllCompanyQueryResult","userType","totalCompanies","ridersUnderCompany","companyId","get","endpoint","auth","res","numberWithCommas","x","toString","replace","companyEarnings","total_revenue","approveDecline","put","success","ToDoorSearch","class","NewWallCards","total_company","unverified_company","onClick","_id","ManageCompanyCard","companyDetails","color","backGroundColor","Avatar","src","Typography","length","TextField","onChange","value","val","temp","filter","toLowerCase","includes","filterRidersTable","target","ManageCompaniesTable","tableArray","Modal","open","onClose","Box","position","top","left","transform","width","bgcolor","borderRadius","boxShadow","p","height","Button","Divider","city","idPhotoUrl","endsWith","href","pdf","companyRegistrationPhotoUrl"],"sourceRoot":""}