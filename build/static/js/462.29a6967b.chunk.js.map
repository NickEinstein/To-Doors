{"version":3,"file":"static/js/462.29a6967b.chunk.js","mappings":"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","sources":["common/LoginHeader.js","common/PasswordTextField.js","features/login/Login.js","utils/FormikUtils.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport toDoorLogo from 'images/ToDoorLogisticsLogo.png'\r\nimport trustedBy3 from '../images/Rectangle 78.png'\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button, Input, MenuItem, Select, TextField, Typography } from '@mui/material';\r\n\r\n\r\nconst LoginHeader = (prop) => {\r\n    const history = useNavigate();\r\n    const redirect = ()=>{\r\n//   localStorage.setItem('auth', null)\r\n      history('/');\r\n  }\r\n    return (\r\n      <div className=\"flex \">\r\n        <div className=\"flex items-center\">\r\n          <div className=\"flex relative items-center\">\r\n            <img\r\n              src={toDoorLogo}\r\n              alt=\"softwork logo\"\r\n              className=\"cursor-pointer w-36\"\r\n              onClick={redirect}\r\n            />\r\n           \r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n}\r\nexport default LoginHeader;\r\n","import React from \"react\";\nimport { IconButton, InputAdornment, TextField, Icon } from \"@mui/material\";\nimport clsx from \"clsx\";\n\n/** @param {import(\"@mui/material\").TextFieldProps} props */\nfunction PasswordTextField(props) {\n  const { error, ...rest } = props;\n  const [isVisible, setVisible] = React.useState(false);\n  const handleVisible = React.useCallback(() => setVisible((p) => !p), []);\n\n  return (\n    <TextField\n      type={isVisible ? \"text\" : \"password\"}\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={handleVisible}\n              disabled={props.disabled}\n            >\n              <Icon className={clsx(error ? \"text-danger\" : \"text-primary\")}>\n                {isVisible ? \"visibility_off\" : \"visibility\"}\n              </Icon>\n            </IconButton>\n          </InputAdornment>\n        ),\n      }}\n      error={error}\n      {...rest}\n    />\n  );\n}\n\nexport default PasswordTextField;\n","import React, { useState } from \"react\";\nimport UserApi from \"apis/UserApi\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useSnackbar } from \"notistack\";\n// import { Button, TextField, Typography } from \"@mui/material\";\nimport PasswordTextField from \"common/PasswordTextField\";\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\nimport useAuthUser from \"hooks/useAuthUser\";\nimport { Navigate } from \"react-router-dom\";\nimport { RouteEnum } from \"constants/RouteConstants\";\nimport LoginHeader from \"common/LoginHeader\";\n\n// import ReactDOM from 'react-dom';\n// import trustedBy1 from './images/Vector.png'\nimport trustedBy2 from \"images/Rectangle 7.png\";\nimport trustedBy3 from \"images/Rectangle 106.png\";\n// import LoginHeader from './LoginHeader';\n// import trustedBy3 from './images/trustedBy-3.png'\n// import trustedBy4 from './images/trustedBy-4.png'\nimport {\n  Button,\n  Input,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Login(props) {\n  const [age, setAge] = React.useState(\"\");\n  const handleChange = (event) => {\n    setAge(event.target.value);\n    console.log(event);\n  };\n  const history = useNavigate();\n\n  const redirect = () => {\n    history(\"/signup-client\");\n  };\n\n  const authUser = useAuthUser();\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\n\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      password: \"\",\n    },\n    validationSchema: yup.object({\n      username: yup.string().trim().required(),\n      password: yup.string().trim().required(),\n    }),\n    onSubmit: async (values) => {\n      console.log(values);\n      // localStorage.setItem('location', values.location)\n      // redirect()\n\n      try {\n        const data = await loginMuation({ data: values }).unwrap();\n        // TODO extra login\n        // redirect()\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\n      } catch (error) {\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\n          variant: \"error\",\n        });\n      }\n    },\n  });\n\n  // if (authUser.accessToken) {\n  //   return <Navigate to={RouteEnum.HOME} />;\n  // }\n\n  return (\n    // <div>\n    //  {/* <Typography variant=\"h6\">Hi</Typography> */}\n    //   <form onSubmit={formik.handleSubmit}>\n    //     <TextField\n    //       label=\"Username\"\n    //       {...getTextFieldFormikProps(formik, \"username\")}\n    //     />\n    //     <PasswordTextField\n    //       label=\"Password\"\n    //       {...getTextFieldFormikProps(formik, \"password\")}\n    //     />\n    //     <Button type=\"submit\">Submit</Button>\n    //   </form>\n    // </div>\n    <div className=\" \">\n      <LoginHeader />\n      <div className=\"flex justify-between text-center\">\n        <div\n          className=\"p-100\"\n          style={{\n            paddingLeft: \"\",\n            paddingRight: \"\",\n            minWidth: \"40%\",\n            maxWidth: \"80%\",\n          }}\n        >\n          <div className=\"flex-vertical\">\n            <Typography variant=\"h3\" className=\"m-b-60\">\n              Welcome Back\n            </Typography>\n\n            <form onSubmit={formik.handleSubmit}>\n              <TextField\n                className=\"w-full\"\n                placeholder=\"Enter your username\"\n                // onChange={handleChange}\n                //     onChange={(e)=>{\n                //   alert('k')\n                //   // console.log(e)\n                //   // localStorage.setItem ('location', e.target.value)\n                // }}\n                name=\"username\"\n                {...getTextFieldFormikProps(formik, \"username\")}\n              />\n\n              <TextField\n                className=\"w-full my-10\"\n                placeholder=\"Enter your Password\"\n                // onChange={handleChange}\n                //     onChange={(e)=>{\n                //   alert('k')\n                //   // console.log(e)\n                //   // localStorage.setItem ('password', e.target.value)\n                // }}\n                name=\"password\"\n                {...getTextFieldFormikProps(formik, \"password\")}\n              />\n              {/* <Select\n          value={age}\n          onChange={handleChange}\n          displayEmpty\n          // inputProps={{ 'aria-label': 'Without label' }}\n          name=\"Location\"\n          {...getTextFieldFormikProps(formik, \"location\")}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select> */}\n\n              {/* <Input placeholder='Location' className='m-b-20'/> */}\n              <div className=\"text-white m-b-30 mt-20  \">\n                <Button\n                  className=\"p-3 w-full\"\n                  type=\"submit\"\n                  color=\"tetiary\"\n                  // onClick={() => localStorage.setItem('type', 'CLIENT')}\n                  // className=' '\n                >\n                  Continue\n                </Button>\n              </div>\n              {/* <div className='login-bck w-100'><Button className='w-100' >Continue</Button></div> */}\n              {/* <div className=\"secondary w-100\"><Button type='submit'\n                className='m-b-60 w-100'\n                onClick={() => localStorage.setItem('type', 'FREELANCER')}\n              >\n                Sign up as a freelancer\n              </Button></div> */}\n              {/* <div className='login-bck w-100'><Button className='w-100' >Continue</Button></div> */}\n            </form>\n\n            <a href=\"\">\n              <h2 className=\"size-11 m-t-40\">\n                Already a Member? <b>Log In</b>\n              </h2>\n            </a>\n          </div>\n        </div>\n        <div\n          className=\"relative flex-align flex-center w-50\"\n          style={{\n            minHeight: \"100%\",\n            position: \"relative\",\n            backgroundColor: \"#F6F6F6\",\n          }}\n        >\n          <div\n            className=\"two-circles relative\"\n            style={{ position: \"relative\" }}\n          ></div>\n          <img\n            src={trustedBy3}\n            className=\"\"\n            style={{\n              position: \"absolute\",\n              top: \"50%\",\n              height: \"49%\",\n              width: \"98.8%\",\n            }}\n          />\n          {/* <div className='' style={{width:'100px', height:'50px', ottomLeftRadius:'100%',ottomRightRadius:'100%', position:'absolute', bottom:'0px', opColor:'blue'}}></div> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/**\n * \n * @param {*} formik \n * @param {*} key \n * @returns \n */\nexport function getTextFieldFormikProps(formik, key) {\n  return {\n    ...formik.getFieldProps(key),\n    error: !!formik.touched?.[key] && !!formik.errors?.[key],\n    helperText: !!formik.touched?.[key] && formik.errors?.[key],\n    focused: formik.values?.[key],\n  };\n}\n\nexport function getCheckFieldFormikProps(\n  formik,\n  key,\n  checkedValue = true\n  // unCheckedValue = false\n) {\n  const textFieldProps = getTextFieldFormikProps(formik, key);\n  // if (key === \"allowAttributeConfiguration\") {\n  //   console.log(textFieldProps.value);\n  // }\n  const value =\n    typeof checkedValue === \"boolean\"\n      ? !!textFieldProps.value\n      : textFieldProps.value;\n  return {\n    ...textFieldProps,\n    value: value,\n    checked: value === checkedValue,\n  };\n  // return {\n  //   checked: !!formik.values[key],\n  //   onChange: (e) => formik.setFieldValue(key, e.target.checked),\n  // };\n}\n"],"names":["prop","history","useNavigate","className","src","toDoorLogo","alt","onClick","props","error","rest","React","isVisible","setVisible","handleVisible","p","type","InputProps","endAdornment","position","disabled","clsx","enqueueSnackbar","useAuthUser","useSnackbar","UserApi","loginMuation","formik","useFormik","initialValues","username","password","validationSchema","yup","trim","required","onSubmit","values","console","log","data","unwrap","variant","message","style","paddingLeft","paddingRight","minWidth","maxWidth","handleSubmit","placeholder","name","getTextFieldFormikProps","color","href","minHeight","backgroundColor","trustedBy3","top","height","width","key","getFieldProps","touched","errors","helperText","focused"],"sourceRoot":""}